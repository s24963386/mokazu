<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cnmokazu</groupId>
	<artifactId>mokazu</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>mokazu Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>4.3.2.RELEASE</spring.version>
		<junit.version>4.11</junit.version>
		<druid.version>1.0.18</druid.version>
		<fastjson.version>1.2.28</fastjson.version>
		<mybaitsplus.version>2.0.5</mybaitsplus.version>
		<mysql.version>5.1.38</mysql.version>
		<log4j2.version>2.7</log4j2.version>
		<log4j.version>1.2.17</log4j.version>
		<slf4j.version>1.7.19</slf4j.version>
		<aspectjweaver.version>1.8.8</aspectjweaver.version>
		<fileupload.version>1.3.1</fileupload.version>
		<jstl.version>1.2</jstl.version>
		<velocity.version>1.7</velocity.version>
		<ehcache.version>2.10.3</ehcache.version>
		<mybatis-ehcache.version>1.0.0</mybatis-ehcache.version>
		<shiro.version>1.3.2</shiro.version>
		<weixin-java-mp.version>2.7.3.BETA</weixin-java-mp.version>
		<jackson.version>2.8.3</jackson.version>
	</properties>
	<dependencies>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Spring Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- servlet-api -->
		<!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>3.0-alpha-1</version>
			<scope>provided</scope>
		</dependency>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>${spring.version}</version>
        </dependency> 

		<!-- AOP -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>

		<!-- FileUpload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${fileupload.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- Mybatis-Plus -->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus</artifactId>
			<version>${mybaitsplus.version}</version>
		</dependency>

		<!-- Mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- Druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<!-- FastJson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>

		<!-- Log4j2 -->
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<!-- log4j 日志 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- slf4j-api 日志接口 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- slf4j-log4j12 日志接口桥接 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- 模板引擎 -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${velocity.version}</version>
		</dependency>
		<!-- Ehcache -->
		<!-- https://mvnrepository.com/artifact/net.sf.ehcache/ehcache -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-ehcache -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-ehcache</artifactId>
			<version>${mybatis-ehcache.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.10.1</version>
		</dependency>
		<!-- Shiro -->
		<!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-web -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-spring -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>

		<!-- poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.13</version>
		</dependency>
		<!-- javamelody依赖包 -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>1.60.0</version>
		</dependency>
		<dependency> 
			<groupId>org.taobao</groupId>
			<artifactId>qlexpress</artifactId>
			<version>3.0.11</version>
		</dependency>
		<!-- redis -->
		<!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
		<dependency>
		    <groupId>redis.clients</groupId>
		    <artifactId>jedis</artifactId> 
		    <version>2.9.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-redis -->
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-redis</artifactId>
		    <version>1.8.1.RELEASE</version>
		</dependency>
		<dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-mp</artifactId>
            <version>${weixin-java-mp.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profiles.activation>dev</profiles.activation>
				<log.level>DEBUG</log.level>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<profiles.activation>test</profiles.activation>
				<log.level>INFO</log.level>
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<properties>
				<profiles.activation>production</profiles.activation>
				<log.level>INFO</log.level>
			</properties>
		</profile>
	</profiles>
	<build>
		<finalName>mokazu</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<!-- **/*.properties 是指包括根目录或子目录所有properties类型的文件 -->
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.json</include>
				</includes>
				<!-- 排除dev、test目录下的文件 -->
				<excludes>
					<exclude>dev/*</exclude>
					<exclude>test/*</exclude>
					<exclude>production/*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 包含，若没有指定则默认为 activeByDefault 标签定义的profile -->
				<includes>
					<include>${profiles.activation}/*</include>
				</includes>
			</resource>
		</resources>


			<plugins>
				<plugin>
					<!-- YUI Compressor Maven压缩插件 -->
					<groupId>net.alchim31.maven</groupId>
					<artifactId>yuicompressor-maven-plugin</artifactId>
					<version>1.3.0</version>
					<configuration>
						<!-- 读取js,css文件采用UTF-8编码 -->
						<encoding>UTF-8</encoding>
						<!-- 不显示js可能的错误 -->
						<jswarn>false</jswarn>
						<!-- 若存在已压缩的文件，会先对比源文件是否有改动 有改动便压缩，无改动就不压缩 -->
						<force>false</force>
						<!-- 在指定的列号后插入新行 -->
						<linebreakpos>-1</linebreakpos>
						<!-- 压缩之前先执行聚合文件操作 -->
						<preProcessAggregates>true</preProcessAggregates>
						<!-- 压缩后保存文件后缀 无后缀 -->
						<nosuffix>true</nosuffix>
						<!-- 压缩后保存文件后缀 
						<suffix>.min</suffix>-->
						<!-- 源目录，即需压缩的根目录 -->
						<sourceDirectory>${basedir}/dist/app</sourceDirectory>
						<!-- 压缩js和css文件 -->
						<includes>
							<include>**/app/*.js</include>
							<include>**/app/*.css</include>
						</includes>
						<!-- 以下目录和文件不会被压缩 -->
						<excludes>
							<exclude>**/app/*.min.js</exclude>
							<exclude>**/app/*.min.css</exclude>
						</excludes>
						<!-- 压缩后输出文件目录 -->
						<outputDirectory>${basedir}/dist/app</outputDirectory>
						<!-- 聚合文件 -->
						<!-- <aggregations>
							<aggregation>
								合并每一个文件后插入一新行
								<insertNewLine>true</insertNewLine>
								需合并文件的根文件夹
								<inputDir>${basedir}/dist/scrsmpts</inputDir>
								最终合并的输出文件
								<output>${basedir}/dist/scrsmpts/app/app.js</output>
								把以下js文件合并成一个js文件，是按顺序合并的
								<includes>
									<include>app/core.js</include>
									<include>app/mlmanager.js</include>
									<include>app/tmpl.js</include>
									<include>app/ui.js</include>
								</includes>
							</aggregation>
						</aggregations> -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<warName>${profiles.activation}</warName>
						<!-- 激活spring profile -->
						<webResources>
							<resource>
								<filtering>true</filtering>
								<directory>src/main/webapp</directory>
								<includes>
									<include>**/web.xml</include>
									<include>version.jsp</include>
									<include>WEB-INF/pages/*.jsp</include>
								</includes>
							</resource>
						</webResources>
						<warSourceDirectory>src/main/webapp</warSourceDirectory>
						<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
						<packagingExcludes>static/**,
							.idea/**</packagingExcludes>
						<warSourceExcludes>dist/app/*.js,dist/app/*.css</warSourceExcludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.9.1</version>
					<executions>
						<execution>
							<phase>clean</phase>
							<goals>
								<goal>timestamp-property</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<name>current.time</name>
						<pattern>yyyy-MM-dd HH:mm:ss</pattern>
						<timeZone>GMT+8</timeZone>
					</configuration>
				</plugin>
				<!-- build tomcat7:run -->
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<path>/mokazu</path>
						<port>8080</port>
						<uriEncoding>UTF-8</uriEncoding>
						<finalName>mokazu</finalName>
						<!-- <warSourceDirectory>${basedir}/target/mokazu</warSourceDirectory> -->
						<server>tomcat7-mokazu</server>
						<url>http://192.168.1.242:8080/manager/text</url>
						<username>admin</username>
						<password>admin</password>
					</configuration>
				</plugin>
			</plugins>

	</build>
	<repositories>
		<repository>
			<id>release</id>
			<url>http://maven.idbhost.com/nexus/content/groups/public</url>
			<releases>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
